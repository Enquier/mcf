/*
 * MMS Reference Implementation API
 * Documentation for MMS API
 *
 * OpenAPI spec version: 4.0.3
 * Contact: mms@openmbee.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from '../ApiClient';

/**
 * The PermissionUpdate model module.
 * @module model/PermissionUpdate
 * @version 4.0.3
 */
export class PermissionUpdate {
  /**
   * Constructs a new <code>PermissionUpdate</code>.
   * @alias module:model/PermissionUpdate
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>PermissionUpdate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PermissionUpdate} obj Optional instance to populate.
   * @return {module:model/PermissionUpdate} The populated <code>PermissionUpdate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PermissionUpdate();
      if (data.hasOwnProperty('action')) obj.action = ApiClient.convertToType(data.action, 'String');
      if (data.hasOwnProperty('name')) obj.name = ApiClient.convertToType(data.name, 'String');
      if (data.hasOwnProperty('role')) obj.role = ApiClient.convertToType(data.role, 'String');
      if (data.hasOwnProperty('orgId')) obj.orgId = ApiClient.convertToType(data.orgId, 'String');
      if (data.hasOwnProperty('orgName')) obj.orgName = ApiClient.convertToType(data.orgName, 'String');
      if (data.hasOwnProperty('projectId')) obj.projectId = ApiClient.convertToType(data.projectId, 'String');
      if (data.hasOwnProperty('projectName')) obj.projectName = ApiClient.convertToType(data.projectName, 'String');
      if (data.hasOwnProperty('branchId')) obj.branchId = ApiClient.convertToType(data.branchId, 'String');
      if (data.hasOwnProperty('inherited')) obj.inherited = ApiClient.convertToType(data.inherited, 'Boolean');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
PermissionUpdate.ActionEnum = {
  /**
   * value: "ADD"
   * @const
   */
  ADD: 'ADD',

  /**
   * value: "REMOVE"
   * @const
   */
  REMOVE: 'REMOVE',
};
/**
 * @member {module:model/PermissionUpdate.ActionEnum} action
 */
PermissionUpdate.prototype.action = undefined;

/**
 * @member {String} name
 */
PermissionUpdate.prototype.name = undefined;

/**
 * @member {String} role
 */
PermissionUpdate.prototype.role = undefined;

/**
 * @member {String} orgId
 */
PermissionUpdate.prototype.orgId = undefined;

/**
 * @member {String} orgName
 */
PermissionUpdate.prototype.orgName = undefined;

/**
 * @member {String} projectId
 */
PermissionUpdate.prototype.projectId = undefined;

/**
 * @member {String} projectName
 */
PermissionUpdate.prototype.projectName = undefined;

/**
 * @member {String} branchId
 */
PermissionUpdate.prototype.branchId = undefined;

/**
 * @member {Boolean} inherited
 */
PermissionUpdate.prototype.inherited = undefined;
